# Simplified Production Docker Compose for Short Video Maker
# Focuses on core services without missing dependencies
# Uses environment variables from .env file

version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: main.Dockerfile
      target: prod-deps
    env_file:
      - ../.env
    environment:
      - NODE_ENV=production
      - DOCKER=true
      - PORT=${PORT:-3123}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PEXELS_API_KEY=${PEXELS_API_KEY}
      - TTS_PROVIDER=${TTS_PROVIDER:-kokoro}
      - WHISPER_MODEL=${WHISPER_MODEL:-medium.en}
      - CONCURRENCY=${CONCURRENCY:-2}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      - ENABLE_METRICS=${ENABLE_METRICS:-false}
      # Legacy variables for backward compatibility
      - REDIS_URL=redis://redis:6379
      - GPU_POOL_ENABLED=false
      - MONITORING_ENABLED=${ENABLE_METRICS:-false}
    ports:
      - "3123:3123"
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3123/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis for Queue & Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GPU Worker
  gpu-worker:
    build:
      context: .
      dockerfile: main.Dockerfile
    env_file:
      - ../.env
    environment:
      - NODE_ENV=production
      - DOCKER=true
      - WORKER_TYPE=gpu-cpu
      - PEXELS_API_KEY=${PEXELS_API_KEY}
      - TTS_PROVIDER=${TTS_PROVIDER:-kokoro}
      - WHISPER_MODEL=${WHISPER_MODEL:-medium.en}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      - CONCURRENCY=${CONCURRENCY:-2}
      - VIDEO_CACHE_SIZE_IN_BYTES=${VIDEO_CACHE_SIZE_IN_BYTES:-2097152000}
      # Worker-specific settings
      - CONCURRENT_JOBS=${CONCURRENCY:-2}
      - QUEUE_NAME=cpu-processing
      - FFMPEG_THREADS=4
      # Legacy variables for backward compatibility
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'node.*worker' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Auto-scaler Service
  autoscaler:
    build:
      context: ./autoscaler
      dockerfile: Dockerfile
    env_file:
      - ../.env
    environment:
      - NODE_ENV=production
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SCALING_ENABLED=${AUTOSCALER_ENABLED:-false}
      - MIN_REPLICAS=${MIN_REPLICAS:-1}
      - MAX_REPLICAS=${MAX_REPLICAS:-5}
      - SCALE_UP_THRESHOLD=${SCALE_UP_THRESHOLD:-80}
      - SCALE_DOWN_THRESHOLD=${SCALE_DOWN_THRESHOLD:-20}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - api-gateway
      - redis

volumes:
  redis-data:
    driver: local