# HAProxy Production Configuration for Short Video Maker
# High-performance load balancing with SSL termination and health checks

global
    # Logging
    log stdout local0 info
    
    # Security
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # SSL/TLS Configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets

    # Performance tuning
    tune.ssl.default-dh-param 2048
    tune.bufsize 32768
    tune.maxrewrite 1024
    
    # Connection limits
    maxconn 4096
    
    # Compression
    compression algo gzip
    compression type text/html text/plain text/css text/javascript application/javascript application/json

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option forwardfor
    option http-server-close
    
    # Timeouts
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout check 10s
    
    # Error handling
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s),http_err_rate(10s),conn_rate(3s),sess_rate(3s)

# Statistics interface
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST
    acl LOCALHOST src 127.0.0.1/32

# HTTP frontend (redirect to HTTPS)
frontend http_frontend
    bind *:80
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Rate limiting
    http-request track-sc0 src table per_ip_rates
    http-request deny if { sc_http_req_rate(0) gt 20 }
    
    # Health check endpoint
    acl is_health_check path_beg /health
    use_backend health_check if is_health_check
    
    # Redirect to HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

# HTTPS frontend
frontend https_frontend
    bind *:443 ssl crt /etc/ssl/certs/video-maker.pem alpn h2,http/1.1
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    http-response set-header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'"
    
    # Rate limiting per IP
    http-request track-sc0 src table per_ip_rates
    http-request deny if { sc_http_req_rate(0) gt 100 }
    http-request deny if { sc_conn_rate(0) gt 10 }
    http-request deny if { sc_sess_rate(0) gt 20 }
    
    # DDoS protection
    http-request deny if { src_http_req_rate(per_ip_rates) gt 50 }
    http-request deny if { src_http_err_rate(per_ip_rates) gt 10 }
    
    # API routing
    acl is_api path_beg /api
    acl is_websocket hdr(Upgrade) -i websocket
    acl is_monitoring path_beg /metrics /health /ready
    acl is_grafana path_beg /grafana
    acl is_prometheus path_beg /prometheus
    
    # Use appropriate backends
    use_backend websocket_backend if is_websocket
    use_backend api_backend if is_api
    use_backend monitoring_backend if is_monitoring
    use_backend grafana_backend if is_grafana
    use_backend prometheus_backend if is_prometheus
    use_backend web_backend
    
    # Compression
    compression algo gzip
    compression type text/html text/plain text/css text/javascript application/javascript application/json application/xml

# Backend configurations
backend api_backend
    balance roundrobin
    option httpchk GET /health HTTP/1.1\r\nHost:\ api
    http-check expect status 200
    
    # Health check configuration
    default-server check inter 10s fall 3 rise 2 weight 100
    
    # API Gateway servers
    server api-1 api-gateway:3123 check
    server api-2 api-gateway:3123 check
    server api-3 api-gateway:3123 check
    server api-4 api-gateway:3123 check
    server api-5 api-gateway:3123 check
    
    # Session persistence for upload jobs
    stick-table type string len 32 size 100k expire 1h
    stick match path,word(3,/) if { path_beg /api/v2/videos }
    stick store-response res.hdr(X-Session-ID) if { path_beg /api/v2/videos }
    
    # Request/response modifications
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Real-IP %[src]
    http-response set-header X-Backend api

backend websocket_backend
    balance source
    option httpchk GET /health HTTP/1.1\r\nHost:\ websocket
    
    # WebSocket specific settings
    timeout tunnel 3600s
    timeout server 3600s
    
    # API Gateway servers (same as API, different routing)
    server ws-1 api-gateway:3123 check
    server ws-2 api-gateway:3123 check
    server ws-3 api-gateway:3123 check
    
    # WebSocket headers
    http-request set-header Connection upgrade
    http-request set-header Upgrade websocket

backend web_backend
    balance roundrobin
    option httpchk GET /health HTTP/1.1\r\nHost:\ web
    
    # Static content servers (can be same as API)
    server web-1 api-gateway:3123 check
    server web-2 api-gateway:3123 check
    
    # Caching for static assets
    http-response set-header Cache-Control "public, max-age=31536000" if { path_end .js .css .png .jpg .gif .ico .woff .woff2 }

backend monitoring_backend
    balance roundrobin
    
    # Monitoring endpoints
    server prometheus-1 prometheus:9090 check
    server grafana-1 grafana:3000 check

backend grafana_backend
    balance roundrobin
    option httpchk GET /api/health HTTP/1.1\r\nHost:\ grafana
    
    server grafana-1 grafana:3000 check
    
    # URL rewriting for Grafana
    http-request replace-path ^/grafana(.*) \1

backend prometheus_backend
    balance roundrobin
    option httpchk GET /-/healthy HTTP/1.1\r\nHost:\ prometheus
    
    server prometheus-1 prometheus:9090 check
    
    # URL rewriting for Prometheus
    http-request replace-path ^/prometheus(.*) \1

backend health_check
    # Simple health check response
    http-request return status 200 content-type text/plain string "OK"

# Rate limiting table
backend per_ip_rates
    stick-table type ip size 100k expire 30s store http_req_rate(10s),http_err_rate(10s),conn_rate(3s),sess_rate(3s)

# Cache configuration for performance
cache video_cache
    total-max-size 2048
    max-object-size 10485760  # 10MB
    max-age 300

# Email alerts for critical events
mailers video_alerts
    timeout mail 20s
    mailer smtp1 smtp://localhost:587

# User lists for access control
userlist admin_users
    user admin password $6$salt$hashedpassword groups admin
    user monitor password $6$salt$hashedpassword groups readonly

# ACL definitions
acl network_allowed src 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
acl admin_path path_beg /admin
acl api_write method POST PUT PATCH DELETE
acl high_load nbsrv(api_backend) lt 3
acl maintenance_mode env(MAINTENANCE) -m str true

# Custom error pages
errorfile 503 /etc/haproxy/errors/503-maintenance.http